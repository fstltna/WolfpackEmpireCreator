#!/usr/bin/perl
use strict;
use warnings;

use UI::Dialog;
use Term::ReadKey;
use Term::ANSIScreen qw(cls);

my $FileEditor = "/bin/nano";
my $Pager = "/usr/bin/less";
my $HOME = $ENV{HOME};
my $FairLandSettings = "$HOME/.EmpSettingsDir";
my $EmpireWorldToolDir = "$HOME/WolfpackEmpireCreator";
chdir $EmpireWorldToolDir;
#my $EmpireWorldToolDir = "WolfpackEmpireCreator";
my $UpdateCommand = "/usr/bin/git pull";
my $DEBUG_MODE = "off";

###################################################
# No changes below here
###################################################

my $EmpireWorldTool_ver = "1.0";

my %GameNames = ();
my %GameSeed = ();
my %GameNumCont = ();
my %GameContSize = ();
my %GameNumIsl = ();
my %GameAvgSizeIsl = ();
my %GameSpikePct = ();
my %GamePctMountian = ();
my %GameMinDistCont = ();
my %GameMinDistIslands = ();

my $menuselection = "";

if (! -e $FairLandSettings)
{
	if (! -d $FairLandSettings)
	{
		#mkdir ("$FairLandSettings") || die("Unable to create the settings directory");
		mkdir ("$FairLandSettings");
	}
}
chdir $FairLandSettings;

my %file_data = ();

sub LoadInSettings
{
	if (! -e "$FairLandSettings/oursettings")
	{
		system("touch $FairLandSettings/oursettings");
	}
	open(IN, "$FairLandSettings/oursettings") || die("ERROR: Could not open input file $FairLandSettings/oursettings");
	my $line;
	while($line = <IN>)
	{
		chomp($line);
		my @line_info = split(/\t/, $line);
		my $key_field = $line_info[0];
		
		my $line_info = \@line_info;
		for (my $i = 0; $i <= $#$line_info; $i++)
		{
			$file_data{$key_field}{$i} = $line_info->[$i];
			PrintDebugCommand("$file_data{$key_field}{$i}");
		}
	}
	close(IN);
	foreach my $key (keys %file_data)
	{
	# ZZZ
		print "ScriptKey: $key\n";
		$GameNames{$key} = $file_data{$key}{0};
		$GameSeed{$key} = $file_data{$key}{1};
		$GameNumCont{$key} = $file_data{$key}{2};
		$GameContSize{$key} = $file_data{$key}{3};
		$GameNumIsl{$key} = $file_data{$key}{4};
		$GameAvgSizeIsl{$key} = $file_data{$key}{5};
		$GameSpikePct{$key} = $file_data{$key}{6};
		$GamePctMountian{$key} = $file_data{$key}{7};
		$GameMinDistCont{$key} = $file_data{$key}{8};
		$GameMinDistIslands{$key} = $file_data{$key}{9};
	}
sleep (10);
}

# Load in all the games listed
LoadInSettings();

sub PrintDebugCommand
{
	if ($DEBUG_MODE eq "off")
	{
		return;
	}
	my $PassedString = shift;
	print "About to run:\n$PassedString\n";
	print "Press Enter To Run This:";
	my $entered = <STDIN>;
}

my $d = new UI::Dialog ( backtitle => "EmpireWorldTool v$EmpireWorldTool_ver", height => 20, width => 65, listheight => 5,
	order => [ 'ascii', 'cdialog', 'xdialog' ]);

my $windowtitle = "Welcome to EmpireWorldTool!";
my $enjoyedtitle = "We hope you enjoyed EmpireWorldTool!";
my $introtext =
"This is the EmpireWorldTool, a utility to create Empire
fairland commands for Empire operators to easily create and
store your fairland world creation settings.";

$d->msgbox( title => $windowtitle, text => $introtext );

if (($d->state() eq "ESC") || ($d->state() eq "CANCEL"))
{
	exit 0;
}

sub DoUpdate
{
	my $DesiredDir = $_[0];

	# Update desired utility
	chdir ($DesiredDir);
	PrintDebugCommand("Running $UpdateCommand in $DesiredDir\n");
	system("$UpdateCommand");
	print "Press Enter To Continue";
	my $entered = <STDIN>;
}

sub UpdateToolsMenu
{
	$menuselection = $d->menu( title => "Update Tools Menu", text => "Select one:",
                            list => [ '1', 'Update EmpireWorldTool',
                                      'q', 'Main Menu' ] );
}

sub UpdateTools
{
	while (-1)
	{
		UpdateToolsMenu();
		if (($menuselection eq "CANCEL") || ($menuselection eq "ESC") || ($menuselection eq "") || ($menuselection eq "q") || ($menuselection eq "Q"))
		{
			return;
		}
		elsif ($menuselection eq "1")
		{
			# Update EmpireWorldTool
			DoUpdate($EmpireWorldToolDir);
		}
	}
}

# fairland command-line arguments
# fairland  [-ahioqv]  [-e configfile] [-R seed] "Number of Contenents" "Contenent Size" "Number of Islands" "Average Size of Islands" "Spike percentage def 10" "Percent of Land that is mountain" "Minimum Distance between contenents" "Minimum Distance from islands to contenents"

sub ReadInput
{
	my $CurrentString = $_[0];
	my $Prompt = $_[1];

	while (-1)
	{
		print "Current value: $CurrentString\n";
		print ("$Prompt: ");
		my $InputLine = <>;
		if (($InputLine eq "q") || ($InputLine eq "Q") || ($InputLine eq "quit"))
		{
			return "";
		}
		if ($InputLine ne "")
		{
			return $InputLine;
		}
	}
}

my $SettingsName = "";
my $SettingsSeed = "";
my $SettingsNumCont = 0;
my $SettingsContSize = 0;
my $SettingsNumIsl = 0;
my $SettingsAvgSizeIsl = 0;
my $SettingsSpikePct = 0;
my $SettingsPctMountain = 0;
my $SettingsMinDistCont = 0;
my $SettingsMinDistIslands = 0;
my $SettingsConfigFile = "";

sub Add_New_Entry
{
	system ("clear");
	print "Enter Desired Name:";
	$SettingsName = <STDIN>;
	if ($SettingsName ne "")
	{
		print ("Currently reading $SettingsName\n");
	}
	$GameNames{$SettingsName} = ReadInput("$SettingsName", "Game Name");
	{
		if ($GameNames{$SettingsName} eq "")
		{
			return;
		}
	}
	# my $ReadInput = "";
	$SettingsSeed = "";
	$GameSeed{$SettingsName} = ReadInput($GameSeed{$SettingsName}, "Game Seed");
	if (($GameSeed{$SettingsName} eq "q") || ($GameSeed{$SettingsName} eq "Q") || ($GameSeed{$SettingsName} eq "quit"))
	{
		return;
	}
}

sub GameSettingsMenu
{
	$menuselection = $d->menu( title => "Game Settings Manager", text => "Select one:",
                            list => [
                                      '1', 'List Settings',
                                      '2', 'Edit coffeemud.ini',
                                      '3', 'View MUD Log',
                                      '4', 'Edit intro.txt',
                                      '5', 'Update EmpireWorldTool',
                                      'q', 'Quit to Main Menu' ] );
}

sub MainMenu
{
	$menuselection = $d->menu( title => "Main Menu", text => "Select one:",
                            list => [
                                      '1', 'List Settings',
                                      '2', 'Edit coffeemud.ini',
                                      '3', 'Edit intro.txt',
                                      '4', 'Update EmpireWorldTool',
                                      'q', 'Quit' ] );
}

while (-1)
{
	MainMenu();
	if (($menuselection eq "CANCEL") || ($menuselection eq "ESC") || ($menuselection eq "") || ($menuselection eq "q") || ($menuselection eq "Q"))
	{
		$d->msgbox( title => $enjoyedtitle, text => "Thanks for using EmpireWorldTool..." );
		exit 0;
	}
	elsif ($menuselection eq "1")
	{
		# Go to the game list page
		GameSettingsMenu();
	}
	elsif ($menuselection eq "2")
	{
		# Edit coffeemud.ini file
		system("$FileEditor $FairLandSettings/coffeemud.ini");
	}
	elsif ($menuselection eq "3")
	{
		# Edit intro.txt file
		system("$FileEditor $FairLandSettings/resources/text/intro.txt");
	}
	elsif ($menuselection eq "4")
	{
		# Update Menu
		UpdateTools();
	}
}

exit 0;
